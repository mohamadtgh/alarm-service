// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CogvisAI Alarms API
 *
 * API for managing alarms and visualizations from cogvisAI sensors.
 *
 * API version: 1.0.0
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// DefaultAPIService is a service that implements the logic for the DefaultAPIServicer
// This service should implement the business logic for every endpoint for the DefaultAPI API.
// Include any external packages or services that will be required by this service.
type DefaultAPIService struct {
}

// NewDefaultAPIService creates a default api service
func NewDefaultAPIService() *DefaultAPIService {
	return &DefaultAPIService{}
}

// AuthLoginPost - Perform login and obtain token.
func (s *DefaultAPIService) AuthLoginPost(ctx context.Context, loginRequest LoginRequest) (ImplResponse, error) {
	// TODO - update AuthLoginPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, LoginResponse{}) or use other options such as http.Ok ...
	// return Response(200, LoginResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AuthLoginPost method not implemented")
}

// AlarmsGet - List alarms.
func (s *DefaultAPIService) AlarmsGet(ctx context.Context, page int32, pageSize int32, sensorId string, type_ string) (ImplResponse, error) {
	// TODO - update AlarmsGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, AlarmsGet200Response{}) or use other options such as http.Ok ...
	// return Response(200, AlarmsGet200Response{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AlarmsGet method not implemented")
}

// AlarmsPost - Create alarm.
func (s *DefaultAPIService) AlarmsPost(ctx context.Context, alarm Alarm) (ImplResponse, error) {
	// TODO - update AlarmsPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Alarm{}) or use other options such as http.Ok ...
	// return Response(201, Alarm{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AlarmsPost method not implemented")
}

// AlarmsAlarmIdGet - get a single alarm.
func (s *DefaultAPIService) AlarmsAlarmIdGet(ctx context.Context, alarmId string) (ImplResponse, error) {
	// TODO - update AlarmsAlarmIdGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Alarm{}) or use other options such as http.Ok ...
	// return Response(200, Alarm{}), nil

	// TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	// return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AlarmsAlarmIdGet method not implemented")
}
